services:
  dmssensors-rabbitmq:
    image: rabbitmq:3-management
    container_name: dmssensors-rabbitmq
    ports:
      - "15672:15672"  # RabbitMQ management UI
      - "5672:5672"    # RabbitMQ AMQP protocol
    env_file:
      - .env

    volumes:
      - dmssensors-rabbitmq-data:/var/lib/rabbitmq
      - ./configs/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - dms-net
    restart: on-failure
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 15s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  device-management:
    container_name: device-management-backend
    build:
      context: ./microservices/device-management
      args:
        SERVER_PORT: ${SERVER_PORT_MANAGEMENT}
        TZ: ${TZ}
    ports:
      - '${HOST_PORT_MANAGEMENT:-8080}:${SERVER_PORT_MANAGEMENT:-8080}'
    env_file:
      - .env
    networks:
      - dms-net
    depends_on:
      dmssensors-rabbitmq:
        condition: service_healthy
    restart: no
    healthcheck:
      test: [ "CMD", "sh", "-c", "curl -f http://localhost:$SERVER_PORT_MANAGEMENT/actuator/health | grep 'UP' || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  temperature-management:
    container_name: temperature-monitoring-backend
    build:
      context: ./microservices/temperature-monitoring
      args:
        SERVER_PORT: ${SERVER_PORT_MONITORING}
        TZ: ${TZ}
    ports:
      - '${HOST_PORT_MONITORING:-8082}:${SERVER_PORT_MONITORING:-8082}'
    env_file:
      - .env
    networks:
      - dms-net
    depends_on:
      dmssensors-rabbitmq:
        condition: service_healthy
    restart: no
    healthcheck:
      test: [ "CMD", "sh", "-c", "curl -f http://localhost:$SERVER_PORT_MONITORING/actuator/health | grep 'UP' || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

  temperature-processing:
    container_name: temperature-processing-backend
    build:
      context: ./microservices/temperature-processing
      args:
        SERVER_PORT: ${SERVER_PORT_PROCESSING}
        TZ: ${TZ}
    ports:
      - '${HOST_PORT_PROCESSING:-8081}:${SERVER_PORT_PROCESSING:-8081}'
    env_file:
      - .env
    networks:
      - dms-net
    depends_on:
      dmssensors-rabbitmq:
        condition: service_healthy
    restart: no
    healthcheck:
      test: [ "CMD", "sh", "-c", "curl -f http://localhost:$SERVER_PORT_PROCESSING/actuator/health | grep 'UP' || exit 1" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M

volumes:
  dmssensors-rabbitmq-data:

networks:
  dms-net: